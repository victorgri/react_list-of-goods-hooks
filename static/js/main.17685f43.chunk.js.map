{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isStarted","setStart","isReversed","setRevers","NONE","sortType","setSortType","minLength","setMinLength","visibleGoods","goods","filter","good","length","sort","good1","good2","ALPHABET","localeCompare","LENGTH","reverse","getReorderedGoods","className","type","onClick","prevState","title","name","id","value","onChange","event","target","Array","map","item","index","ReactDOM","render","document","getElementById"],"mappings":"6KAiBKA,E,oDAbCC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAmCE,IAAME,EAAgB,WAC3B,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAgCF,oBAAS,GAAzC,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAgCJ,mBAAmBH,EAASQ,MAA5D,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAkCP,mBAAS,GAA3C,mBAAOQ,EAAP,KAAkBC,EAAlB,KAEMC,EAnCR,SACEC,EACAL,EACAH,EACAK,GAEA,IAAME,EAAe,YAAIC,GACtBC,QAAO,SAAAC,GAAI,OAAIA,EAAKC,QAAUN,KAmBjC,OAjBAE,EAAaK,MAAK,SAACC,EAAOC,GACxB,OAAQX,GACN,KAAKT,EAASqB,SACZ,OAAOF,EAAMG,cAAcF,GAE7B,KAAKpB,EAASuB,OACZ,OAAOJ,EAAMF,OAASG,EAAMH,OAE9B,QACE,OAAO,MAITX,GACFO,EAAaW,UAGRX,EAScY,CACnBxB,EACAQ,EACAH,EACAK,GAGF,OACE,qBAAKe,UAAU,MAAf,SACItB,EAUE,qCACE,sBAAKsB,UAAU,UAAf,UACE,wBACEC,KAAK,SACLC,QAAS,kBAAMlB,EAAYV,EAASqB,WACpCK,UAAU,oBAHZ,iCAQA,wBACEC,KAAK,SACLC,QAAS,kBAAMlB,EAAYV,EAASuB,SACpCG,UAAU,oBAHZ,4BAQA,wBACEC,KAAK,SACLC,QAAS,kBAAMrB,GAAU,SAAAsB,GAAS,OAAKA,MACvCH,UAAU,iBAHZ,qBAQA,wBACEC,KAAK,SACLC,QAAS,WACPlB,EAAYV,EAASQ,MACrBD,GAAU,GACVK,EAAa,IAEfc,UAAU,mBAPZ,mBAWA,mDACA,wBACEI,MAAM,SACNC,KAAK,YACLC,GAAG,YACHC,MAAOtB,EACPuB,SAAU,SAACC,GAAD,OAAWvB,GAAcuB,EAAMC,OAAOH,QALlD,SAQI,YAAI,IAAII,MAAM,KAAKC,KAAI,SAACC,EAAMC,GAAP,OACrB,wBAAmBP,MAAOO,EAAQ,EAAlC,SACGA,EAAQ,GADED,WAQrB,oBAAIb,UAAU,QAAd,SACGb,EAAayB,KAAI,SAAAtB,GAAI,OACpB,oBAAIU,UAAU,yBAAd,SACGV,GADyCA,WAjElD,wBACEW,KAAK,SACLC,QAAS,kBAAMvB,GAAS,IACxBqB,UAAU,oBAHZ,sBClEVe,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.17685f43.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\nfunction getReorderedGoods(\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n  minLength: number,\n) {\n  const visibleGoods = [...goods]\n    .filter(good => good.length >= minLength);\n\n  visibleGoods.sort((good1, good2) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return good1.localeCompare(good2);\n\n      case SortType.LENGTH:\n        return good1.length - good2.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isStarted, setStart] = useState(false);\n  const [isReversed, setRevers] = useState(false);\n  const [sortType, setSortType] = useState<SortType>(SortType.NONE);\n  const [minLength, setMinLength] = useState(1);\n\n  const visibleGoods = getReorderedGoods(\n    goodsFromServer,\n    sortType,\n    isReversed,\n    minLength,\n  );\n\n  return (\n    <div className=\"App\">\n      {!isStarted\n        ? (\n          <button\n            type=\"button\"\n            onClick={() => setStart(true)}\n            className=\"button is-success\"\n          >\n            Start\n          </button>\n        ) : (\n          <>\n            <div className=\"buttons\">\n              <button\n                type=\"button\"\n                onClick={() => setSortType(SortType.ALPHABET)}\n                className=\"button is-primary\"\n              >\n                Sort alphabetically\n              </button>\n\n              <button\n                type=\"button\"\n                onClick={() => setSortType(SortType.LENGTH)}\n                className=\"button is-success\"\n              >\n                Sort by length\n              </button>\n\n              <button\n                type=\"button\"\n                onClick={() => setRevers(prevState => !prevState)}\n                className=\"button is-info\"\n              >\n                Reverse\n              </button>\n\n              <button\n                type=\"button\"\n                onClick={() => {\n                  setSortType(SortType.NONE);\n                  setRevers(false);\n                  setMinLength(1);\n                }}\n                className=\"button is-danger\"\n              >\n                Reset\n              </button>\n              <span> Select length </span>\n              <select\n                title=\"Select\"\n                name=\"minLength\"\n                id=\"minLength\"\n                value={minLength}\n                onChange={(event) => setMinLength(+event.target.value)}\n              >\n                {\n                  [...new Array(10)].map((item, index) => (\n                    <option key={item} value={index + 1}>\n                      {index + 1}\n                    </option>\n                  ))\n                }\n              </select>\n            </div>\n\n            <ul className=\"Goods\">\n              {visibleGoods.map(good => (\n                <li className=\"Goods__item level-item\" key={good}>\n                  {good}\n                </li>\n              ))}\n            </ul>\n          </>\n        )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}